# This is a basic workflow to help you get started with Actions

name: Trigger build for specific lambda function (path)
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master , build-packages , lambda_builds ]
    paths:
      - 'lambdas/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  check-changes:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    outputs:
      output1: ${{ steps.find_changes.outputs.lambdas }}
    steps:
      #- run: echo ${{secrets.AWS_ACCESS_KEY_ID_TEST}}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
        #with:
          #ref: ${{ github.event.pull_request.head.sha }}
          #submodules: true

      - name: Find changes
        run: |
          str1=""
          changes=$(git diff --name-only HEAD^..HEAD | grep "lambdas/" |  sed -r 's/^lambdas\/([^/]+)\/?.*/\1/' || true)
          if [ -n "$changes" ]; then
            changes=$(echo $changes | uniq)
            for change in $(echo $changes); do
              str1="$str1\"$change\", "
              echo "str1 is:$str1"
            done
            str1=${str1::-2}
          fi
          echo "str1 after circle:$str1"
          echo "::set-output name=lambdas::[$str1]"
        id: find_changes

  build-package:
    strategy:
      matrix:
        lambda_path: ${{fromJSON(needs.check-changes.outputs.output1)}}
    runs-on: ubuntu-latest
    needs: check-changes
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.3.0
        with:
          owner: cmc-ai
          repo: example-proj
          github_token: ${{ secrets.IAC_PAT }}
          inputs: '{ "lambda_2build" : "${{ matrix.lambda_path }}" }'
          wait_workflow: true
          workflow_file_name: build-lambdas-package.yaml
          ref: master

  trigger-iac-deployment:
    runs-on: ubuntu-latest
    needs: build-package
    steps:
      - name: Trigger IAC CD (Terraform Apply)
        uses: mvasigh/dispatch-action@main
        with:
          token: ${{ secrets.IAC_PAT }}
          repo: iac
          owner: cmc-ai
          event_type: dev_code_deploy



