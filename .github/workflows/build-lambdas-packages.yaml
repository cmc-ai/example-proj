# This is a basic workflow to help you get started with Actions

name: Build Lambda Packages and upload it to s3
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master , build-packages , lambda_builds ]
      paths-ignore:
        - '!lambdas/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  check-changes:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    outputs:
      output1: ${{ steps.find_changes.outputs.lambdas }}
    steps:
      #- run: echo ${{secrets.AWS_ACCESS_KEY_ID_TEST}}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
        #with:
          #ref: ${{ github.event.pull_request.head.sha }}
          #submodules: true
      - name: Checkout Dependencies Repo
        uses: actions/checkout@v2
        with:
          repository: cmc-ai/payment-processor
          ref: main
          path: payment-processor
          token: ${{ secrets.IAC_PAT }}
      - name: Find changes
        run: |
          set -x
          ls -la
          git status
          git log -n 3
          lambda_changes=$(git diff --name-only HEAD^..HEAD | grep ^lambdas/)
          if  [ -z $lambda_changes ]; then
            echo "No changes found"
            echo "::set-output name=lambdas::[]"
            echo "::set-output name=anything_to_build::false"
          else
            str1=""
            echo "Changes found, let build lambda package for each of them"
            echo $lambda_changes | while read changes ;
              do str1="$str1\"$changes\" "
            done
            str2="[$str1]"
            echo "::set-output name=lambdas::$str2"
            echo "::set-output name=anything_to_build::true"
          fi
        id: find_changes

  build-package:
    strategy:
      matrix:
        node: ${{fromJSON(needs.build.outputs.output1)}}
    runs-on: ubuntu-latest
    needs: check-changes
    steps:
      - run: echo ${{needs.build.outputs.output1}}
