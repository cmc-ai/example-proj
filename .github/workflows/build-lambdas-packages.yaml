# This is a basic workflow to help you get started with Actions

name: Build Lambda Packages and upload it to s3
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master , build-packages , lambda_builds ]
    paths:
      - 'lambdas/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  check-changes:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    outputs:
      output1: ${{ steps.find_changes.outputs.lambdas }}
    steps:
      #- run: echo ${{secrets.AWS_ACCESS_KEY_ID_TEST}}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
        #with:
          #ref: ${{ github.event.pull_request.head.sha }}
          #submodules: true
      - name: Checkout Dependencies Repo
        uses: actions/checkout@v2
        with:
          repository: cmc-ai/payment-processor
          ref: main
          path: payment-processor
          token: ${{ secrets.IAC_PAT }}
      - name: Find changes
        run: |
          str1=""
          changes=$(git diff --name-only HEAD^..HEAD | grep ^lambdas)
          changes=$(echo $changes | sed 's/\(.*\)\/\(.*\)\/.*$/\1\/\2/' | uniq)
          for change in $(echo $changes); do
            str1="$str1\"$change\" "
            echo "str1 is:$str1"
          done
          str1=${str1::-1}
          echo "str1 after circle:$str1"
          echo "::set-output name=lambdas::[$str1]"
        id: find_changes

  build-package:
    strategy:
      matrix:
        lambda_path: ${{fromJSON(needs.check-changes.outputs.output1)}}
    runs-on: ubuntu-latest
    needs: check-changes
    steps:
      #- run: echo ${{secrets.AWS_ACCESS_KEY_ID_TEST}}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: true
      - name: Checkout Dependencies Repo
        uses: actions/checkout@v2
        with:
          repository: cmc-ai/payment-processor
          ref: main
          path: payment-processor
          token: ${{ secrets.IAC_PAT }}
      - uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
      - name: Install dependencies with LambCI
        uses: docker://lambci/lambda:build-python3.8
        with:
            entrypoint: pip
            args: install -r ${{ matrix.lambda_path }}/requirements.txt --target lambdas/api_borrower/${{ matrix.lambda_path }}
      - id: get_lambda_name
        run: |
          lambda_name=$(echo ${ matrix.lambda_path }} | sed 's/.*\/\(.*\)$/\1/')
          echo "::set-output name=id::lambda_name"
      - name: Bundle function with dependencies
        run: |
            cd ${{ matrix.lambda_path }}
            zip -r ../${{ steps.get_lambda_name.outputs.lambda_name }}.zip ./*

      - name: Copy function zip file to S3
        run: |
            filename=$(md5sum lambdas/${{ steps.get_lambda_name.outputs.lambda_name }}.zip | awk '{print $1}')
            aws s3 rm s3://katabat-chatbot-dev.ca-central-1.630063752049/builds/${{ steps.get_lambda_name.outputs.lambda_name }}/*.zip || true
            aws s3 cp ${{ matrix.lambda_path }} s3://katabat-chatbot-dev.ca-central-1.630063752049/builds/${{ steps.get_lambda_name.outputs.lambda_name }}/$filename.zip

